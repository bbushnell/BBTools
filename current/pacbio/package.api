#version 1
#package pacbio
#generated 2025-09-06T20:37:53

<class CalcCoverageFromSites>
*@author Brian Bushnell
*@date Jul 19, 2012
public class CalcCoverageFromSites

#Fields
public static int MIN_END_DIST=GenerateVarlets.MIN_END_DIST


#Methods
public static void main(String[] args)

public static void processAndWrite(String fname, int genome, int mincoverage, String outpattern)

public static void process(String fname, int genome, int mincoverage)

public static SiteScoreR[] toSites(String s)

</class CalcCoverageFromSites>
<class GenerateMultiChrom>
*@author Brian Bushnell
*@date Jul 16, 2012
public class GenerateMultiChrom

#Methods
public static void main(String[] args)

private static void addN(ChromosomeArray cha, int minContig, int maxContig, int buffer)

*@param cha
*@param i
*@return
private static ChromosomeArray makeSynthetic(ChromosomeArray cha, int chrom)

</class GenerateMultiChrom>
<class MakePacBioScript>
*@author Brian Bushnell
*@date Oct 2, 2012
public class MakePacBioScript

#Methods
*Be sure to replace:
*@BUILDNUM with a number
*@DIRTY_INPUT with the PacBio file
*@CLEAN_INPUT_1 with the Illumina file
*@ORGANISM with the name of the organism (or whatever)
*@NUMSLOTS with the number of slots requested
*@TARGET_SIZE with an estimate of the genome size, in bases. Examples: 160000000 or 160m or 0.16g are equivalent.
*@RAM with e.g. Xmx31g
*@MAXRAM with e.g. Xmx220g
*@SCRIPT with the output file, e.g. run.sh
*@MERGEREF with a list of reference files, e.g. chrom1.fa,chrom2.fa,chrom3.fa
*@MERGEDIRTY with a list of dirty files, e.g. subreads1.fa,subreads2.fa,subreads3.fa
*@MERGECLEAN with a list of clean files, e.g. illumina1.fq,illumina2.fq,illumina3.fq
*@EXTRA with extra files for Illumina error correction. e.g. extra=a.fq,b.fq,c.fq
*Optional:
*@MAXREADS with the max number of clean reads to use in phase 1 (the slowest phase)
*@REFERENCE with a reference file (optional)
*@REFBUILD with a number
public static void main(String[] args)

</class MakePacBioScript>
<class MergeFastaContigs>
*@author Brian Bushnell
*@date Jul 10, 2012
public class MergeFastaContigs

#Fields
static long definedBasesIn=0

static long contigsIn=0

static long definedBasesOut=0

static long contigsOut=0

static long chromsOut=0

public static int lineBreak=80

public static int modulo=lineBreak + 1

public static int N_PAD_LENGTH=300

public static int N_PAD_LENGTH2=2000

public static int MIN_CONTIG_TO_ADD=150

public static int MAX_OUTPUT_LEN=220000000

public static int maxChromsOut=60000

public static long maxDataOut=Long.MAX_VALUE

private static long dataOut=0

public static String npad

public static String npad2

public static boolean overwrite=true

public static boolean append=false

public static boolean PAD_START=true

public static boolean verbose=false


#Methods
public static void main(String[] args)

*@param infile
*@param outfile
*@param outindex
public static void merge(String infile, String outfile, String outindex)

*@param infiles
*@param outfile
*@param outindex
public static void mergeFasta(String infiles, String outfile, String outindex)

*@param in1
*@param outfile
*@param outindex
public static void mergeFastq(String in1, String outfile, String outindex)

private static void printAsLines(CharSequence sb, int mod)

private static void printAsLines(CharSequence sb, int mod, TextStreamWriter cout)

public static String npad(int N_PAD_LENGTH)

public static String npad2(int N_PAD_LENGTH)

private static final int min(int x, int y)

@SuppressWarnings private static final int max(int x, int y)

</class MergeFastaContigs>
<class MergeReadsAndGenome>
*@author Brian Bushnell
*@date Dec 7, 2012
public class MergeReadsAndGenome

#Fields
public static boolean verbose=false


#Methods
public static void main(String[] args)

public static long appendReads(ConcurrentReadInputStream cris, TextStreamWriter tsw, long id)

public static Read correctRead(Read r, long id)

</class MergeReadsAndGenome>
<class PartitionFastaFile>
*@author Brian Bushnell
*@date Jul 10, 2012
public class PartitionFastaFile

#Fields
public static int MIN_CONTIG_TO_ADD=150

public static long MAX_OUTPUT_LEN=200000000000L

public static long maxDataOut=Long.MAX_VALUE

private static long dataOut=0


#Methods
public static void main(String[] args)

public static void split(TextFile tf, String outfile, long partition)

</class PartitionFastaFile>
<class PartitionReads>
*@author Brian Bushnell
*@date Nov 15, 2012
public class PartitionReads

#Fields
*Permission to overwrite existing files
public static boolean overwrite=true

*Permission to append to existing files
public static boolean append=false

public static int partitions=2

public static boolean fastq=false

public static boolean fasta=false

public static boolean bread=false


#Methods
public static void main(String[] args)

public static long process(TextStreamWriter[] tsw1, TextStreamWriter[] tsw2, ConcurrentReadInputStream cris)

</class PartitionReads>
<class ProcessStackedSitesNormalized>
*@author Brian Bushnell
*@date Jul 18, 2012
public class ProcessStackedSitesNormalized

#Fields
public static int MIN_LENGTH_TO_RETAIN=0

public static boolean RETAIN_ALL=false

public static long sitesIn=0

public static long correctIn=0

public static long sitesOut=0

public static long correctOut=0

public static float FRACTION_TO_RETAIN1=0.75f

public static float FRACTION_TO_RETAIN2=0.3f

public static int MIN_SITES_TO_DISCARD=0

public static int SITES_TO_RETAIN1=8

public static int SITES_TO_RETAIN2=16

public static int MIN_VOTES_TO_RETAIN=5

public static float MIN_FRACTION_FROM_READ_ENDS=0.35f

public static float SCORE_THRESH=0.034f

public static float CENTER_WEIGHT=0.015f

public static int INTERVAL=12


#Methods
*@param infile
*@param outfile
public static void process(String infile, String outfile)

private static void processInterval(Buffer buffer, int chrom, int start, int stop)

private static final int markRetain(ArrayList<SiteScoreR> list)

public static Ssra toSrar(String s)

public static float normalizedScore(SiteScoreR ssr, int endDist)

*Finds highest score of ssr's fully covering this site
public static int maxScore(Ssra ssra, int min, int max)

</class ProcessStackedSitesNormalized>
<class ProcessStackedSitesNormalized.Ssra>
public static class ProcessStackedSitesNormalized.Ssra

#Fields
*SiteScoreR array sorted by start loc, ascending
SiteScoreR[] array

*All contents must have same chromosome / contig
int chrom

*Minimum location in array
int min

*Maximum location in array
int max

*Top score in array
int best

*Bottom score in array
int worst


#Methods
public Ssra()

public Ssra(SiteScoreR[] array_, int chrom_, int min_, int max_, int best_, int worst_)

</class ProcessStackedSitesNormalized.Ssra>
<class ProcessStackedSitesNormalized.Buffer>
public static class ProcessStackedSitesNormalized.Buffer

#Fields
public int max=-1

public int min=-1

public int chrom=-1

public final Ssra[] array

private Ssra nextSsra

public final String infname

public final String outfname

private TextFile tf

private TextStreamWriter tsw


#Methods
public Buffer(int size, String infname_, String outfname_)

public Ssra read()

private boolean advance()

*Starting with an empty array, fill with next chrom
private boolean fill()

public boolean advanceToInterval(int a, int b, int c)

private void purge()

private void write(Ssra ssra)

public Ssra add(Ssra s)

private void setLimits()

public void close()

</class ProcessStackedSitesNormalized.Buffer>
<class RemoveAdapters2>
*Increased sensitivity to nearby adapters.
*@author Brian Bushnell
*@date Nov 5, 2012
public class RemoveAdapters2

#Fields
public static boolean DONT_OUTPUT_BROKEN_READS

*Permission to overwrite existing files
private static boolean overwrite=true

*Permission to append to existing files
private static boolean append=false

private static int THREADS=Shared.LOGICAL_PROCESSORS

private static boolean OUTPUT_READS=false

private static boolean ordered=false

private static boolean PERFECTMODE=false

private static float MINIMUM_ALIGNMENT_SCORE_RATIO=0.31f

private static float SUSPECT_RATIO=0.85F

public static boolean USE_LOCALITY=true

public static boolean USE_ALT_MSA=true

public static boolean TRY_PLUS=true

public static boolean TRY_MINUS=true

private static int npad=35

public static int minContig=50

public static int suspectDistance=100

public static final String pacbioAdapter="ATCTCTCTCTTTTCCTCCTCCTCCGTTGTTGTTGTTGAGAGAGAT"

public static final String pacbioStandard_v1="TCCTCCTCCTCCGTTGTTGTTGTTGAGAGAGAGAAGGCTGGGCAGGCTATGCACCCTGGTCCAGGTCAAA" + "AGCTGCGGAACCCGCTAGCGGCCATCTTGGCCACTAGGGGTCCCGCAGATTCATATTGTCGTCTAGCATGCACAATGCTGCAAACCCAGCTTGCAATGCCCACAGCA" + "AGCGGCCAATCTTTACGCCACGTTGAATTGTTTATTACCTGTGACTGGCTATGGCTTGCAACGCCACTCGTAAAACTAGTACTTTGCGGTTAGGGGAAGTAGACAAA"+ "CCCATTACTCCACTTCCCGGAAGTTCAACTCATTCCAACACGAAATAAAAGTAAACTCAACACCCCAAGCAGGCTATGTGGGGGGGTGATAGGGGTGGATTCTATTT"+ "CCTATCCCATCCCCTAGGATCTCAATTAAGTTACTAGCGAGTTAAATGTCTGTAGCGATCCCGTCAGTCCTATCGCGCGCATCAAGACCTGGTTGGTTGAGCGTGCA"+ "GTAGATCATCGATAAGCTGCGAGTTAGGTCATCCCAGACCGCATCTGGCGCCTAAACGTTCAGTGGTAGCTAAGGCGTCACCTTCGACTGTCTAAAGGCAATATGTC"+ "GTCCTTAGCTCCAAGTCCCTAGCAAGCGTGTCGGGTCTCTCTCTTTTCCTCCTCCTCCGTTGTTGTTGTTGAGAGAGACCCGACACGCTTGCTAGGGACTTGGAGCT"+ "AAGGACGACATATTGCCTTTAGACAGTCGAAGGTGACGCCTTAGCTACCACTGAACGTTTAGGCGCCAGATGCGGTCTGGGATGACCTAACTCGCAGCTTATCGATG"+ "ATCTACTGCACGCTCAACCAACCAGGTCTTGATGCGCGCGATAGGACTGACGGGATCGCTACAGACATTTAACTCGCTAGTAACTTAATTGAGATCCTAGGGGATGG"+ "GATAGGAAATAGAATCCACCCCTATCACCCCCCCACATAGCCTGCTTGGGGTGTTGAGTTTACTTTTATTTCGTGTTGGAATGAGTTGAACTTCCGGGAAGTGGAGT"+ "AATGGGTTTGTCTACTTCCCCTAACCGCAAAGTACTAGTTTTACGAGTGGCGTTGCAAGCCATAGCCAGTCACAGGTAATAAACAATTCAACGTGGCGTAAAGATTG"+ "GCCGCTTGCTGTGGGCATTGCAAGCTGGGTTTGCAGCATTGTGCATGCTAGACGACAATATGAATCTGCGGGACCCCTAGTGGCCAAGATGGCCGCTAGCGGGTTCC"+ "GCAGCTTTTGACCTGGACCAGGGTGCATAGCCTGCCCAGCCTTCTCTCTCTCTTT"


#Methods
public static void main(String[] args)

public static void process(ConcurrentReadInputStream cris, ConcurrentReadOutputStream ros, String query, boolean split)

public static void printStatistics(ProcessThread[] pts)

private static int removeDiscarded(ArrayList<Read> list)

</class RemoveAdapters2>
<class RemoveAdapters3>
*Increased sensitivity to nearby adapters.
*Does reverse-complementation on low-scoring suspects.
*@author Brian Bushnell
*@date Nov 5, 2012
public class RemoveAdapters3

#Fields
public static boolean DONT_OUTPUT_BROKEN_READS

*Permission to overwrite existing files
private static boolean overwrite=true

*Permission to append to existing files
private static boolean append=false

private static int THREADS=Shared.LOGICAL_PROCESSORS

private static boolean OUTPUT_READS=false

private static boolean ordered=false

private static boolean PERFECTMODE=false

private static float MINIMUM_ALIGNMENT_SCORE_RATIO=0.31f

public static boolean RCOMP=true

private static int npad=35

public static int minContig=20

public static int suspectDistance=100

public static int rcompDistance=80

public static final String pacbioAdapter="ATCTCTCTCTTTTCCTCCTCCTCCGTTGTTGTTGTTGAGAGAGAT"

public static final String pacbioStandard_v1="TCCTCCTCCTCCGTTGTTGTTGTTGAGAGAGAGAAGGCTGGGCAGGCTATGCACCCTGGTCCAGGTCAAA" + "AGCTGCGGAACCCGCTAGCGGCCATCTTGGCCACTAGGGGTCCCGCAGATTCATATTGTCGTCTAGCATGCACAATGCTGCAAACCCAGCTTGCAATGCCCACAGCA" + "AGCGGCCAATCTTTACGCCACGTTGAATTGTTTATTACCTGTGACTGGCTATGGCTTGCAACGCCACTCGTAAAACTAGTACTTTGCGGTTAGGGGAAGTAGACAAA"+ "CCCATTACTCCACTTCCCGGAAGTTCAACTCATTCCAACACGAAATAAAAGTAAACTCAACACCCCAAGCAGGCTATGTGGGGGGGTGATAGGGGTGGATTCTATTT"+ "CCTATCCCATCCCCTAGGATCTCAATTAAGTTACTAGCGAGTTAAATGTCTGTAGCGATCCCGTCAGTCCTATCGCGCGCATCAAGACCTGGTTGGTTGAGCGTGCA"+ "GTAGATCATCGATAAGCTGCGAGTTAGGTCATCCCAGACCGCATCTGGCGCCTAAACGTTCAGTGGTAGCTAAGGCGTCACCTTCGACTGTCTAAAGGCAATATGTC"+ "GTCCTTAGCTCCAAGTCCCTAGCAAGCGTGTCGGGTCTCTCTCTTTTCCTCCTCCTCCGTTGTTGTTGTTGAGAGAGACCCGACACGCTTGCTAGGGACTTGGAGCT"+ "AAGGACGACATATTGCCTTTAGACAGTCGAAGGTGACGCCTTAGCTACCACTGAACGTTTAGGCGCCAGATGCGGTCTGGGATGACCTAACTCGCAGCTTATCGATG"+ "ATCTACTGCACGCTCAACCAACCAGGTCTTGATGCGCGCGATAGGACTGACGGGATCGCTACAGACATTTAACTCGCTAGTAACTTAATTGAGATCCTAGGGGATGG"+ "GATAGGAAATAGAATCCACCCCTATCACCCCCCCACATAGCCTGCTTGGGGTGTTGAGTTTACTTTTATTTCGTGTTGGAATGAGTTGAACTTCCGGGAAGTGGAGT"+ "AATGGGTTTGTCTACTTCCCCTAACCGCAAAGTACTAGTTTTACGAGTGGCGTTGCAAGCCATAGCCAGTCACAGGTAATAAACAATTCAACGTGGCGTAAAGATTG"+ "GCCGCTTGCTGTGGGCATTGCAAGCTGGGTTTGCAGCATTGTGCATGCTAGACGACAATATGAATCTGCGGGACCCCTAGTGGCCAAGATGGCCGCTAGCGGGTTCC"+ "GCAGCTTTTGACCTGGACCAGGGTGCATAGCCTGCCCAGCCTTCTCTCTCTCTTT"


#Methods
public static void process(ConcurrentReadInputStream cris, ConcurrentReadOutputStream ros, String query, boolean split)

public static void printStatistics(ProcessThread[] pts)

private static int removeDiscarded(ArrayList<Read> list)

</class RemoveAdapters3>
<class SiteR>
*@author Brian Bushnell
*@date Jul 24, 2012
public class SiteR

#Fields
public final int start

public final int stop

public final int chromStrand

public final long idPairnum

public SiteR next


#Methods
public SiteR(SiteScoreR ssr)

public SiteR(int start_, int stop_, int chrom, byte strand, long numericID, int pairnum)

public boolean equals(SiteScore other)

public boolean equals(SiteScoreR other)

public StringBuilder toTextRecursive(StringBuilder sb)

public StringBuilder toText()

@Override public String toString()

public long numericID()

public int pairNum()

public int chrom()

public byte strand()

public int listLength()

</class SiteR>
<class SortSites>
*@author Brian Bushnell
*@date Aug 2, 2012
public class SortSites

#Fields
private static final HashMap<Long,TextStreamWriter> wmap=new HashMap<Long,TextStreamWriter>()

public static int INTERVAL=200

public static int BLOCKSIZE=8000000

public static long sitesRead=0

public static long sitesWritten=0

public static long perfectWritten=0

public static long semiperfectWritten=0

public static boolean DELETE_TEMP=true

public static final String DEFAULT_TEMP_PATTERN="SortSitesByIDTempFile_#.txt.gz"

public static String tempname=null

public static boolean POSITIONMODE=false

public static boolean IGNORE_PERFECT_SITES=false


#Methods
public static void stack(String fname1, String outname, String tempname)

private static void write(SiteScoreR ssr)

protected static final long key(SiteScoreR ssr)

protected static final long poskey(int chrom, int start)

protected static final long idkey(long id)

protected static final String fname(long key, String outname)

private static final void finish(String outname)

private static final void finishByPosition(TextStreamWriter out, ArrayList<Long> keys)

private static final void finishByID(TextStreamWriter out, ArrayList<Long> keys)

</class SortSites>
<class SplitOffPerfectContigs>
*@author Brian Bushnell
*@date Jul 26, 2012
public class SplitOffPerfectContigs

#Fields
public static long basesWritten=0

public static long basesKept=0

public static long basesDropped=0

public static long basesX=0

public static long contigsWritten=0

public static long contigsKept=0

public static long contigsDropped=0

public static long contigsX=0

public static int N_PAD_LENGTH=MergeFastaContigs.N_PAD_LENGTH

public static int N_PAD_LENGTH2=MergeFastaContigs.N_PAD_LENGTH2

public static int MIN_CONTIG_TO_ADD=50

public static boolean BREAK_BAD_CONTIGS=false

public static boolean verbose=false


#Methods
public static void main(String[] args)

public static long writeContigs(ChromosomeArray cha, CoverageArray ca, long contig, int trigger, int minAcceptableCoverage, int fastaBlocklen, TextStreamWriter tsw, int buildout, int tipbuffer)

public static void writeContig(CharSequence sb, TextStreamWriter tsw, int blocklen)

public static ArrayList<CoverageArray> toCoverage(String sitesfile, int padding)

</class SplitOffPerfectContigs>
<class StackSites>
*@author Brian Bushnell
*@date Jul 16, 2012
public class StackSites

#Fields
public static final int INTERVAL=200

public static long readsProcessed=0

public static long sitesProcessed=0


#Methods
public static void stack(String fname1, String fname2, String outname, String pcovoutname)

private static boolean checkPerfection(int start, int stop, byte[] bases, ChromosomeArray cha, boolean rcomp, float f)

private static void write(ArrayList<SiteScoreR> alsr, TextStreamWriter out)

public static boolean isCorrectHitLoose(SiteScore ss, int trueChrom, byte trueStrand, int trueStart, int trueStop, int thresh, boolean useChrom)

</class StackSites>
<class StackSites2>
*@author Brian Bushnell
*@date Jul 16, 2012
public class StackSites2

#Fields
*Sites will be written to files, each containing an index range of this size.
*Larger means fewer files, but more memory used when reading the files (at a later stage).
public static int BLOCKSIZE=8000000

*Sites are grouped into intervals (by start location) and treated as an array of arrays.
*All sites in an interval are printed as one line of text.
public static final int INTERVAL=200

public static long readsProcessed=0

public static long sitesProcessed=0

public static boolean DELETE_TEMP=true

public static final String DEFAULT_TEMP_PATTERN="StackSites2TempFile_#.txt.gz"

*Start incrementing coverage this far in from the site tips.
public static int PCOV_TIP_DIST=6

*Toss sites from areas with less than this coverage, since they can't be used to call vars
public static int MIN_COV_TO_RETAIN=2

*Toss sites from areas with less than this coverage, since they can't be used to call vars
public static int MIN_PCOV_TO_TOSS=3

private static final CoverageArray FAKE=new CoverageArray2(-1,500)


#Methods
public static void main(String[] args)

public static void stack(String fname1, String fname2, String outname, String pcovoutname, String tempname)

*TODO - thread this by chrom
private static final void finish(Glob g, String outname, ArrayList<CoverageArray> pcov, ArrayList<CoverageArray> truePcov, ArrayList<CoverageArray> cov)

private static boolean retainSite(SiteScoreR ssr, CoverageArray pcov, CoverageArray tpcov, CoverageArray cov)

private static boolean checkPerfection(int start, int stop, byte[] bases, ChromosomeArray cha, boolean rcomp, float f)

public static boolean isCorrectHitLoose(SiteScore ss, int trueChrom, byte trueStrand, int trueStart, int trueStop, int thresh, boolean useChrom)

</class StackSites2>
